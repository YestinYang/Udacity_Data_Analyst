# 应当在文件中，对所有代码块设为 echo=FALSE 。
library(ggplot2)
library(gplots)
library(gridExtra)
library(GGally)
ggpairs(rw)
install.packages("randomForest")
library("randomForest", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:randomForest", unload=TRUE)
library("randomForest", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
set.seed(8888)
RFmodel = randomForest(quality ~ ., data = rw, importance = True, ntree=300)
plot(RFmodel)
set.seed(8888)
RFmodel <- randomForest(quality ~ ., data = rw, importance = True, ntree=300)
plot(RFmodel)
set.seed(8888)
RFmodel <- randomForest(quality ~ ., data = rw, importance = TRUE, ntree=300)
plot(RFmodel)
set.seed(8888)
RFmodel <- randomForest(quality ~ ., data = rw, importance = TRUE, ntree=150)
plot(RFmodel)
set.seed(8888)
RFmodel <- randomForest(quality ~ ., data = rw, importance = TRUE, ntree=150)
RFmodel
set.seed(8888)
RFmodel <- randomForest(quality ~ ., data = rw, importance = TRUE, ntree=300)
RFmodel
set.seed(8888)
RFmodel <- randomForest(quality ~ ., data = rw, importance = TRUE, ntree=3000)
RFmodel
set.seed(8888)
RFmodel <- randomForest(quality ~ ., data = rw, importance = TRUE, ntree=500)
RFmodel
set.seed(8888)
RFmodel <- randomForest(quality ~ ., data = rw, importance = TRUE, ntree=250)
RFmodel
set.seed(8888)
RFmodel <- randomForest(quality ~ ., data = rw, importance = TRUE, proximity = TRUE, ntree=300)
RFmodel
library("nnet", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
set.seed(8888)
multi.norm.model <- multinom(quality ~ ., data = rw)
multi.norm.model
set.seed(8888)
multi.norm.model <- multinom(quality ~ ., data = rw)
summary(multi.norm.model)
detach("package:nnet", unload=TRUE)
set.seed(8888)
RFmodel <- randomForest(quality ~ ., data = rw, importance = TRUE, proximity = TRUE, ntree=300)
RFmodel
set.seed(8888)
RFmodel <- randomForest(quality ~ ., data = rw, importance = TRUE, proximity = TRUE, ntree=300)
RFmodel
importance(RFmodel,type=1)
set.seed(8888)
RFmodel <- randomForest(quality ~ ., data = rw, importance = TRUE, ntree=300)
RFmodel
importance(RFmodel,type=1)
set.seed(8888)
RFmodel <- randomForest(quality ~ ., data = rw, importance = TRUE, ntree=300)
RFmodel
importance(RFmodel,type=1)
importance(RFmodel,type=2)
# 加载你最终使用的所有组件
# 在这个代码块的分析中。
# 注意，在这个代码块中，将参数 "echo" 设为假。
# This prevents the code from displaying in the knitted HTML output.这可以避免代码混入 HTML 输出显示。
# 应当在文件中，对所有代码块设为 echo=FALSE 。
library(ggplot2)
library(gplots)
library(gridExtra)
library(GGally)
library(randomForest)
set.seed(8888)
RFmodel <- randomForest(quality ~ ., data = rw, importance = TRUE, ntree=300)
RFmodel
importance(RFmodel,type=1)
table(rw$quality)
(577+535)/1359
ggpairs(rw)
View(rw)
write.csv(rw, file="./rw.csv")
# 加载你最终使用的所有组件
# 在这个代码块的分析中。
# 注意，在这个代码块中，将参数 "echo" 设为假。
# This prevents the code from displaying in the knitted HTML output.这可以避免代码混入 HTML 输出显示。
# 应当在文件中，对所有代码块设为 echo=FALSE 。
library(ggplot2)
library(gplots)
library(gridExtra)
library(GGally)
library(randomForest)
ggplot(data = wine,
aes(y = sulphates, x = alcohol,
color = quality)) +
geom_point(alpha = 0.8, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
scale_y_continuous(limits=c(0.3,1.5)) +
facet_wrap(~rating) +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality'))
ggplot(data = rw,
aes(y = sulphates, x = alcohol,
color = quality)) +
geom_point(alpha = 0.8, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
scale_y_continuous(limits=c(0.3,1.5)) +
facet_wrap(~rating) +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality'))
ggplot(data = rw,
aes(y = sulphates, x = alcohol,
color = quality)) +
geom_point(alpha = 0.8, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
scale_y_continuous(limits=c(0.3,1.5)) +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality'))
ggplot(data = rw,
aes(y = sulphates, x = alcohol,
color = quality)) +
geom_point(alpha = 0.8, size = 1) +
geom_smooth(method = "lm",size=1)  +
scale_y_continuous(limits=c(0.3,1.5)) +
scale_color_brewer(type='seq',
guide=guide_legend(title='Quality'))
ggplot(data = rw,
aes(y = sulphates, x = alcohol,
color = quality)) +
geom_point(alpha = 0.8, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=1)  +
scale_y_continuous(limits=c(0.3,1.5))
ggplot(aes(y = sulphates, x = alcohol, color = quality), data = rw) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE)
ggplot(aes(x = alcohol, y = total.sulfur.dioxide, color = quality), data = rw) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE)
ggplot(aes(x = alcohol, y = total.sulfur.dioxide, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
ggplot(aes(x = alcohol, y = sulphates, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
ggplot(aes(x = alcohol, y = volatile.acidity, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
ggplot(aes(x = alcohol, y = density, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
ggplot(aes(x = total.sulfur.dioxide, y = sulphates, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
ggplot(aes(x = total.sulfur.dioxide, y = sulphates, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(limits=c(0,180))
ggplot(aes(x = total.sulfur.dioxide, y = volatile.acidity, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(limits=c(0,180))
ggplot(aes(x = total.sulfur.dioxide, y = density, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(limits=c(0,180))
ggplot(aes(x = total.sulfur.dioxide, y = volatile.acidity, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(limits=c(0,180))
ggplot(aes(x = sulphates, y = volatile.acidity, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(limits=c(0,180))
ggplot(aes(x = sulphates, y = volatile.acidity, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(limits=c(0,180))
ggplot(aes(x = total.sulfur.dioxide, y = sulphates, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(limits=c(0,180))
ggplot(aes(x = total.sulfur.dioxide, y = volatile.acidity, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(limits=c(0,180))
ggplot(aes(x = alcohol, y = total.sulfur.dioxide, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
ggplot(aes(x = alcohol, y = total.sulfur.dioxide, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_y_continuous(limits=c(0,180))
ggplot(aes(x = sulphates, y = volatile.acidity, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
ggplot(aes(x = volatile.acidity, y =sulphates, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
ggplot(aes(x = sulphates, y = density, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
summary(rw$quality)
ggplot(aes(x = alcohol, y = total.sulfur.dioxide, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_y_continuous(limits=c(0,180))
ggplot(aes(x = alcohol, y = sulphates, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
ggplot(aes(x = alcohol, y = volatile.acidity, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
ggplot(aes(x = alcohol, y = density, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
ggplot(aes(x = total.sulfur.dioxide, y = sulphates, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(limits=c(0,180))
ggplot(aes(x = total.sulfur.dioxide, y = volatile.acidity, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(limits=c(0,180))
ggplot(aes(x = total.sulfur.dioxide, y = density, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(limits=c(0,180))
ggplot(aes(x = sulphates, y = volatile.acidity, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
ggplot(aes(x = sulphates, y = density, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
ggplot(aes(x = sulphates, y = alcohol, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
p1 = ggplot(aes(x = alcohol, y = total.sulfur.dioxide, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_y_continuous(limits=c(0,180))
p2 = ggplot(aes(x = total.sulfur.dioxide, y = alcohol, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(limits=c(0,180))
grid.arrange(p1,p2,ncol=1)
p1 = ggplot(aes(x = alcohol, y = total.sulfur.dioxide, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_y_continuous(limits=c(0,180))
p2 = ggplot(aes(x = total.sulfur.dioxide, y = alcohol, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(limits=c(0,180))
grid.arrange(p1,p2,nrow=1)
p1 = ggplot(aes(x = alcohol, y = sulphates, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
p2 = ggplot(aes(x = sulphates, y = alcohol, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
grid.arrange(p1,p2,nrow=1)
p1 = ggplot(aes(x = alcohol, y = volatile.acidity, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
p2 = ggplot(aes(x = volatile.acidity, y = alcohol, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
grid.arrange(p1,p2,nrow=1)
p1 = ggplot(aes(x = alcohol, y = density, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
p2 = ggplot(aes(x = density, y = alcohol, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
grid.arrange(p1,p2,nrow=1)
p1 = ggplot(aes(x = total.sulfur.dioxide, y = sulphates, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(limits=c(0,180))
p2 = ggplot(aes(x = sulphates, y = total.sulfur.dioxide, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_y_continuous(limits=c(0,180))
grid.arrange(p1,p2,nrow=1)
ggplot(aes(x = total.sulfur.dioxide, y = volatile.acidity, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(limits=c(0,180))
p2 = ggplot(aes(x = volatile.acidity, y = total.sulfur.dioxide, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_y_continuous(limits=c(0,180))
grid.arrange(p1,p2,nrow=1)
p1 = ggplot(aes(x = total.sulfur.dioxide, y = density, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_x_continuous(limits=c(0,180))
p2 = ggplot(aes(x = density, y = total.sulfur.dioxide, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
scale_y_continuous(limits=c(0,180))
grid.arrange(p1,p2,nrow=1)
p1 = ggplot(aes(x = sulphates, y = volatile.acidity, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
p2 = ggplot(aes(x = volatile.acidity, y = sulphates, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
grid.arrange(p1,p2,nrow=1)
p1 = ggplot(aes(x = sulphates, y = density, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
p2 = ggplot(aes(x = density, y = sulphates, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE)
grid.arrange(p1,p2,nrow=1)
ggplot(aes(x = total.sulfur.dioxide, y=free.sulfur.dioxide), data = rw) +
geom_point() +
geom_smooth(method = 'lm', color = 'red')
# 加载你最终使用的所有组件
# 在这个代码块的分析中。
# 注意，在这个代码块中，将参数 "echo" 设为假。
# This prevents the code from displaying in the knitted HTML output.这可以避免代码混入 HTML 输出显示。
# 应当在文件中，对所有代码块设为 echo=FALSE 。
library(ggplot2)
library(gplots)
library(gridExtra)
library(GGally)
library(randomForest)
ggplot(aes(x = total.sulfur.dioxide, y=free.sulfur.dioxide), data = rw) +
geom_point() +
geom_smooth(method = 'lm', color = 'red')
print('Linear model of free and total sulfur dioxide, with corresponding significance test')
lm.sulfur <- lm(rw$total.sulfur.dioxide~rw$free.sulfur.dioxide)
summary(lm.sulfur)
ggplot(aes(x = total.sulfur.dioxide, y=free.sulfur.dioxide), data = rw) +
geom_point() +
xlim(c(0,200)) +
geom_smooth(method = 'lm', color = 'red')
ggplot(aes(x = total.sulfur.dioxide, y=free.sulfur.dioxide), data = rw) +
geom_point() +
scale_x_continuous(c(0,200)) +
geom_smooth(method = 'lm', color = 'red')
ggplot(aes(x = total.sulfur.dioxide, y=free.sulfur.dioxide), data = rw) +
geom_point() +
scale_x_continuous(limits = c(0,200)) +
geom_smooth(method = 'lm', color = 'red')
ggplot(aes(x = total.sulfur.dioxide, y=free.sulfur.dioxide), data = rw[rw$total.sulfur.dioxide<200]) +
geom_point() +
geom_smooth(method = 'lm', color = 'red')
ggplot(aes(x = total.sulfur.dioxide, y=free.sulfur.dioxide), data = rw[rw$total.sulfur.dioxide<200,]) +
geom_point() +
geom_smooth(method = 'lm', color = 'red')
ggplot(aes(x = total.sulfur.dioxide, y=free.sulfur.dioxide), data = rw) +
geom_point() +
scale_x_continuous(limits = c(0,180)) +
geom_smooth(method = 'lm', color = 'red')
ggplot(aes(x = total.sulfur.dioxide, y=free.sulfur.dioxide), data = rw) +
geom_point() +
scale_x_continuous(limits = c(0,170)) +
geom_smooth(method = 'lm', color = 'red')
# 加载你最终使用的所有组件
# 在这个代码块的分析中。
# 注意，在这个代码块中，将参数 "echo" 设为假。
# This prevents the code from displaying in the knitted HTML output.这可以避免代码混入 HTML 输出显示。
# 应当在文件中，对所有代码块设为 echo=FALSE 。
library(ggplot2)
library(gplots)
library(gridExtra)
library(GGally)
library(randomForest)
ggplot(aes(x = total.sulfur.dioxide, y=free.sulfur.dioxide), data = rw) +
geom_point() +
scale_x_continuous(limits = c(0,170)) +
geom_smooth(method = 'lm', color = 'red')
ggplot(aes(x = total.sulfur.dioxide, y=free.sulfur.dioxide), data = rw) +
geom_point() +
scale_x_continuous(limits = c(0,170)) +
geom_smooth(method = 'lm', color = 'red') +
xlab('总二氧化硫含量/毫克每立方分米') +
ylab('游离二氧化硫含量/毫克每立方分米')
ggplot(aes(x = total.sulfur.dioxide, y=free.sulfur.dioxide), data = rw) +
geom_point() +
scale_x_continuous(limits = c(0,170)) +
geom_smooth(method = 'lm', color = 'red') +
xlab('总二氧化硫含量/毫克每立方分米') +
ylab('游离二氧化硫含量/毫克每立方分米') +
ggtitle('游离二氧化硫与总二氧化硫含量的关系')
ggplot(aes(x = total.sulfur.dioxide, y=free.sulfur.dioxide), data = rw) +
geom_point() +
scale_x_continuous(limits = c(0,170)) +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_smooth(method = 'lm', color = 'red') +
xlab('总二氧化硫含量 / 毫克每立方分米') +
ylab('游离二氧化硫含量 / 毫克每立方分米') +
ggtitle('红酒中游离二氧化硫与总二氧化硫含量的关系') +
theme(plot.title = element_text(hjust = 0.5))
# 加载你最终使用的所有组件
# 在这个代码块的分析中。
# 注意，在这个代码块中，将参数 "echo" 设为假。
# This prevents the code from displaying in the knitted HTML output.这可以避免代码混入 HTML 输出显示。
# 应当在文件中，对所有代码块设为 echo=FALSE 。
library(ggplot2)
library(gplots)
library(gridExtra)
library(GGally)
library(randomForest)
library(ggpmisc)
ggplot(aes(x = total.sulfur.dioxide, y=free.sulfur.dioxide), data = rw) +
geom_point() +
scale_x_continuous(limits = c(0,170)) +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_smooth(method = 'lm', color = 'red') +
xlab('总二氧化硫含量 / 毫克每立方分米') +
ylab('游离二氧化硫含量 / 毫克每立方分米') +
ggtitle('红酒中游离二氧化硫与总二氧化硫含量的关系') +
theme(plot.title = element_text(hjust = 0.5))
install.packages("ggpmisc")
ggplot(aes(x = total.sulfur.dioxide, y=free.sulfur.dioxide), data = rw) +
geom_point() +
scale_x_continuous(limits = c(0,170)) +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_smooth(method = 'lm', color = 'red') +
xlab('总二氧化硫含量 / 毫克每立方分米') +
ylab('游离二氧化硫含量 / 毫克每立方分米') +
ggtitle('红酒中游离二氧化硫与总二氧化硫含量的关系') +
theme(plot.title = element_text(hjust = 0.5))
# 加载你最终使用的所有组件
# 在这个代码块的分析中。
# 注意，在这个代码块中，将参数 "echo" 设为假。
# This prevents the code from displaying in the knitted HTML output.这可以避免代码混入 HTML 输出显示。
# 应当在文件中，对所有代码块设为 echo=FALSE 。
library(ggplot2)
library(gplots)
library(gridExtra)
library(GGally)
library(randomForest)
library(ggpmisc)
ggplot(aes(x = total.sulfur.dioxide, y=free.sulfur.dioxide), data = rw) +
geom_point() +
scale_x_continuous(limits = c(0,170)) +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_smooth(method = 'lm', color = 'red') +
xlab('总二氧化硫含量 / 毫克每立方分米') +
ylab('游离二氧化硫含量 / 毫克每立方分米') +
ggtitle('红酒中游离二氧化硫与总二氧化硫含量的关系') +
theme(plot.title = element_text(hjust = 0.5))
p1 = ggplot(aes(x = alcohol, y = density, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
xlab('酒精含量 / 体积百分比') +
ylab('密度 / 克每立方厘米') +
scale_colour_discrete(name = "品质评级")
p2 = ggplot(aes(x = density, y = alcohol, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
xlab('密度 / 克每立方厘米') +
ylab('酒精含量 / 体积百分比') +
scale_colour_discrete(name = "品质评级")
grid.arrange(p1,p2,nrow=1,top='红酒中酒精含量与密度对红酒品质评级的影响')
p1 = ggplot(aes(x = alcohol, y = sulphates, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
xlab('酒精含量 / 体积百分比') +
ylab('硫酸盐添加剂 / 克每立方分米') +
scale_colour_discrete(name = "品质评级")
p2 = ggplot(aes(x = sulphates, y = alcohol, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
xlab('硫酸盐添加剂 / 克每立方分米') +
ylab('酒精含量 / 体积百分比') +
scale_colour_discrete(name = "品质评级")
grid.arrange(p1,p2,nrow=1,top='红酒中酒精含量与硫酸盐添加剂对红酒品质评级的影响')
p1 = ggplot(aes(x = alcohol, y = sulphates, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
xlab('酒精含量 / 体积百分比') +
ylab('硫酸盐添加剂 / 克每立方分米') +
scale_colour_discrete(name = "品质评级") +
scale_y_continuous(limits = c(0,1.5))
p2 = ggplot(aes(x = sulphates, y = alcohol, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
xlab('硫酸盐添加剂 / 克每立方分米') +
ylab('酒精含量 / 体积百分比') +
scale_colour_discrete(name = "品质评级") +
scale_x_continuous(limits = c(0,1.5))
grid.arrange(p1,p2,nrow=1,top='红酒中酒精含量与硫酸盐添加剂对红酒品质评级的影响')
p1 = ggplot(aes(x = alcohol, y = sulphates, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
xlab('酒精含量 / 体积百分比') +
ylab('硫酸盐添加剂 / 克每立方分米') +
scale_colour_discrete(name = "品质评级") +
scale_y_continuous(limits = c(0,1.5))
p2 = ggplot(aes(x = sulphates, y = alcohol, color = quality), data = rw) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
xlab('硫酸盐添加剂 / 克每立方分米') +
ylab('酒精含量 / 体积百分比') +
scale_colour_discrete(name = "品质评级") +
scale_x_continuous(limits = c(0,1.5))
grid.arrange(p1,p2,nrow=1,top='红酒中酒精含量与硫酸盐添加剂对红酒品质评级的影响')
