?cut
pf$year_joined.bucket = cut(pf$year_joined,
c(2004,2009,2011,2012,2014))
table(cut(pf$year_joined, breaks = ))
pf$year_joined.bucket = cut(pf$year_joined,
c(2004,2009,2011,2012,2014))
View(pf)
table(pf$year_joined.bucket)
ggplot(aes(x = year_joined.bucket, y = friend_count), data = pf) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', median)
ggplot(aes(x = year_joined.bucket, y = friend_count), data = pf) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean) +
```
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median) +
geom_line(aes(color = year_joined.bucket), linetype = 2, stat = 'summary', fun.y = mean)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median) +
geom_line(linetype = 2, stat = 'summary', fun.y = mean)
with(subset(pf,tenure>=1), summary(friend_count/tenure))
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 30 * round(tenure / 30), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 90 * round(tenure / 90), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 30 * round(tenure / 30), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 90 * round(tenure / 90), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 90 * round(tenure / 90), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_smooth(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 90 * round(tenure / 90), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_smooth(aes(color = year_joined.bucket))
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_smooth(aes(color = year_joined.bucket))
yo = read.csv('./lesson5/yogurt.csv')
View(yo)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
ggplot(aes(x = price), data = yo) +
geom_histogram()
ggplot(aes(x = price), data = yo) +
geom_histogram(binwidth = 10)
ggplot(aes(x = price), data = yo) +
geom_histogram(binwidth = 5)
ggplot(aes(x = price), data = yo) +
geom_histogram(binwidth = 1)
？transform
?transform
?sum
?transform
yo$all.purchases = yo$strawberry + yo$blueberry + yo$pina.colada + yo$plain + yo$mixed.berry
ggplot(aes(x = all.purchases), data = yo) +
geom_histogram()
ggplot(aes(x = time, y = price), data = yo) +
geom_point()
ggplot(aes(x = time, y = price), data = yo) +
geom_point(alpha = 1/20)
ggplot(aes(x = time, y = price), data = yo) +
geom_point(alpha = 1/50)
ggplot(aes(x = time, y = price), data = yo) +
geom_jitter(alpha = 1/50)
ggplot(aes(x = time, y = price), data = yo) +
geom_jitter(alpha = 1/4, shape = 21)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
set.seed(4321)
sample.id = sample(levels(yo$id), 16)
ggplot(aes(x = time, y = price), data = subset(yo, pf$id %in% sample.id)) +
geom_line() +
geom_point(aes(size = all.purchases))
set.seed(4321)
sample.ids = sample(levels(yo$id), 16)
?sample
sample(1:12, replace = TRUE)
levels(yo$id)
yo$id
levels(yo$id)
?levels
levels(1:12)
summary(yo)
yo$id = factor(yo$id)
summary(yo)
set.seed(4321)
sample.ids = sample(levels(yo$id), 16)
ggplot(aes(x = time, y = price), data = subset(yo, pf$id %in% sample.id)) +
geom_line() +
geom_point(aes(size = all.purchases))
set.seed(4321)
sample.ids = sample(levels(yo$id), 16)
ggplot(aes(x = time, y = price), data = subset(yo, pf$id %in% sample.ids)) +
geom_line() +
geom_point(aes(size = all.purchases))
ggplot(aes(x = time, y = price), data = subset(yo, pf$id %in% sample.ids)) +
facet_wrap(~id) +
geom_line() +
geom_point(aes(size = all.purchases))
set.seed(4321)
sample.ids = sample(levels(yo$id), 16)
ggplot(aes(x = time, y = price), data = subset(yo, pf$id %in% sample.ids)) +
facet_wrap( ~ id) +
geom_line() +
geom_point(aes(size = all.purchases))
set.seed(4321)
sample.ids = sample(levels(yo$id), 16)
ggplot(aes(x = time, y = price), data = subset(yo, id %in% sample.ids)) +
facet_wrap( ~ id) +
geom_line() +
geom_point(aes(size = all.purchases))
ggplot(aes(x = time, y = price), data = subset(yo, id %in% sample.ids)) +
facet_wrap( ~ id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 1)
install.packages("GGally")
library("GGally", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
set.seed(1836)
pf_subset = pf[,c(2:15)]  # remove user id
ggpairs(pf_subset[sample.int(nrow(pf_subset),1000),])
colnames(nci) <- c(1:64)
nci <- read.table("./lesson5/nci.tsv")
colnames(nci) <- c(1:64)
View(nci)
nci.long.samp <- melt(as.matrix(nci[1:200,]))
names(nci.long.samp) <- c("gene", "case", "value")
head(nci.long.samp)
ggplot(aes(y = gene, x = case, fill = value),
data = nci.long.samp) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c("blue", "red"))(100))
library("reshape2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
nci.long.samp <- melt(as.matrix(nci[1:200,]))
names(nci.long.samp) <- c("gene", "case", "value")
head(nci.long.samp)
ggplot(aes(y = gene, x = case, fill = value),
data = nci.long.samp) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c("blue", "red"))(100))
dm = diamonds
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
dm = diamonds
?geom_histogram
ggplot(aes(x = price, color = cut), data = dm) +
geom_histogram() +
facet_wrap(~color)
ggplot(aes(x = price, color = cut), data = dm) +
geom_histogram(scale_fill_brewer(type = 'qual')) +
facet_wrap(~color)
ggplot(aes(x = price, color = cut), data = dm) +
geom_histogram(scale_fill_brewer(type = 'qual')) +
facet_wrap(~color)
ggplot(aes(x = price, color = cut), data = dm) +
geom_histogram(aes(scale_fill_brewer(type = 'qual'))) +
facet_wrap(~color)
ggplot(aes(x = price, color = cut), data = dm) +
geom_histogram() +
scale_fill_brewer(type = 'qual') +
facet_wrap(~color)
ggplot(aes(x = price, color = cut), data = dm) +
geom_histogram() +
scale_color_brewer(type = 'qual') +
facet_wrap(~color)
ggplot(aes(x = price, color = cut), data = dm) +
geom_histogram() +
scale_color_brewer(type = 'qual') +
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = dm) +
geom_histogram() +
scale_fill_brewer(type = 'qual') +
facet_wrap(~color)
ggplot(aes(x = log(price), fill = cut), data = dm) +
geom_histogram() +
scale_fill_brewer(type = 'qual') +
facet_wrap(~color)
ggplot(data = dm, aes(x = table, y = price, color = cut)) +
geom_scatter() +
scale_color_brewer(type = 'qual')
ggplot(data = dm, aes(x = table, y = price, color = cut)) +
geom_point() +
scale_color_brewer(type = 'qual')
?summary
ggplot(data = dm, aes(x = x*y*z, y = price, color = clarity)) +
xlim(0, quantile(dm$x * dm$y * dm$z, 0.99)) +
geom_point() +
scale_color_brewer(type = 'div')
ggplot(data = dm, aes(x = x*y*z, y = log(price), color = clarity)) +
xlim(0, quantile(dm$x * dm$y * dm$z, 0.99)) +
geom_point() +
scale_color_brewer(type = 'div')
pf = read.csv('./lesson3/pseudo_facebook.tsv', sep = '/t')
pf = read.csv('./lesson3/pseudo_facebook.tsv', sep = '\t')
View(pf)
pf$prop_initiated = pf$friendships_initiated / pf$friend_count
View(pf)
pf$year_joined.bucket = cut(pf$year_joined,
c(2004,2009,2011,2012,2014))
ggplot(data = pf, aes(x = tenure, y = prop_initiated, color = year_joined.bucket)) +
geom_line(stat = 'summary', fun.y = median) +
scale_color_brewer('qual')
View(pf)
pf$year_joined.bucket = cut(pf$year_joined,
c(2004,2009,2011,2012,2014))
View(pf_subset)
ggplot(data = pf, aes(x = tenure, y = prop_initiated)) +
geom_line(stat = 'summary', fun.y = median)
ggplot(aes(x = cut, y = price/carat, color = color), data = dm) +
facet_wrap(~clarity) +
geom_point() +
scale_color_brewer('qual')
ggplot(aes(x = cut, y = price/carat, color = color), data = dm) +
facet_wrap(~clarity) +
geom_point() +
scale_color_brewer('div')
ggplot(aes(x = cut, y = price/carat, color = color), data = dm) +
facet_wrap(~clarity) +
geom_jitter() +
scale_color_brewer('div')
ggplot(aes(x = cut, y = price/carat, color = color), data = dm) +
facet_wrap(~clarity) +
geom_jitter() +
scale_color_brewer(type = 'div')
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
dm = diamonds
ggplot(aes(x = carat, y = price), data = dm) +
geom_point() +
xlim(0, quantile(dm$carat,0.99)) +
ylim(0, quantile(dm$price,0.99))
library("gridExtra", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
plot1 <- qplot(x = price, data = dm) +
ggtitle('Price')
plot2 <- qplot(x = log10(price), data = dm) +
ggtitle('Price (log10)')
grid.arrange()
plot1 <- qplot(x = price, data = dm) +
ggtitle('Price')
plot2 <- qplot(x = log10(price), data = dm) +
ggtitle('Price (log10)')
grid.arrange(plot1,plot2)
plot1 <- qplot(x = price, data = dm) +
ggtitle('Price')
plot2 <- qplot(x = log10(price), data = dm) +
ggtitle('Price (log10)')
grid.arrange(plot1,plot2,ncol = 1)
plot1 <- qplot(x = price, data = dm) +
ggtitle('Price')
plot2 <- qplot(x = log10(price), data = dm) +
ggtitle('Price (log10)')
grid.arrange(plot1,plot2,ncol = 2)
plot1 <- qplot(x = price, data = dm, binwidth = 100) +
ggtitle('Price')
plot2 <- qplot(x = log10(price), data = dm, binwidth = 0.01) +
ggtitle('Price (log10)')
grid.arrange(plot1,plot2,ncol = 2)
qplot(carat, price, data = dm) +
scale_y_continuous(trans = log10_trans()) +
ggtitle('Price (log10) by Carat')
qplot(carat, price, data = dm) +
scale_y_continuous(trans = log10_trans()) +
ggtitle('Price (log10) by Carat')
scale_y_continuous(trans = log10_trans +
qplot(carat, price, data = dm) +
scale_y_continuous(trans = log10_trans) +
ggtitle('Price (log10) by Carat')
qplot(carat, price, data = dm) +
scale_y_continuous(trans = log10_trans) +
ggtitle('Price (log10) by Carat')
qplot(carat, price, data = dm) +
scale_y_continuous(trans = log10()) +
ggtitle('Price (log10) by Carat')
qplot(carat, price, data = dm) +
scale_y_continuous(trans = log10_trans()) +
ggtitle('Price (log10) by Carat')
qplot(carat, price, data = dm) +
scale_y_log10() +
ggtitle('Price (log10) by Carat')
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
library("scales", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
library(scales)
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
library(scales)
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
ggplot(aes(carat, price), data = diamonds) +
geom_point(alpha = 0.5, size = 0.75, position = jitter) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
ggplot(aes(carat, price), data = diamonds) +
geom_point(alpha = 0.5, size = 0.75, position = 'jitter') +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
library("RColorBrewer", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
# install and load the RColorBrewer package
# install.packages('RColorBrewer')
library(RColorBrewer)
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
# install and load the RColorBrewer package
# install.packages('RColorBrewer')
library(RColorBrewer)
ggplot(aes(x = carat, y = price, color = clarity), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
ggplot(aes(x = carat, y = price, color = cut), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Cut')
?scale_color_brewer
ggplot(aes(x = carat, y = price, color = color), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = Cut, reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Cut')
ggplot(aes(x = carat, y = price, color = color), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Color', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Color')
ggplot(aes(x = carat, y = price, color = color), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Color', reverse = F,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Color')
?read.csv
# 加载数据
rw = read.csv('https://raw.githubusercontent.com/udacity/new-dand-advanced-china/master/探索性数据分析/项目/wineQualityReds.csv', sep = ',')
# 加载数据
rw = read.csv(https://raw.githubusercontent.com/udacity/new-dand-advanced-china/master/探索性数据分析/项目/wineQualityReds.csv, sep = ',')
# 加载数据
rw = read.csv('https://raw.githubusercontent.com/udacity/new-dand-advanced-china/master/探索性数据分析/项目/wineQualityReds.csv', sep = ',')
# 加载数据
rw = read.csv2('https://raw.githubusercontent.com/udacity/new-dand-advanced-china/master/探索性数据分析/项目/wineQualityReds.csv', sep = ',')
# 加载数据
rw = read.csv('https://raw.githubusercontent.com/udacity/new-dand-advanced-china/master/探索性数据分析/项目/wineQualityReds.csv', sep = ',')
# 加载数据
rw = read.csv('https://raw.githubusercontent.com/udacity/new-dand-advanced-china/master/探索性数据分析/项目/wineQualityReds.csv', sep = ',')
# 加载数据
rw = read.csv('https://raw.githubusercontent.com/udacity/new-dand-advanced-china/master/探索性数据分析/项目/wineQualityReds.csv', sep = ',')
# 加载数据
rw = read.csv('https://raw.githubusercontent.com/udacity/new-dand-advanced-china/master/探索性数据分析/项目/wineQualityReds.csv', sep = ',')
# 加载数据
rw = read.csv('./project/wineQualityReds.csv', sep = ',')
View(rw)
?read.csv
# 加载数据
rw = read.csv('./project/wineQualityReds.csv', sep = ',')
rw = rw[, c(1:)]
# 加载数据
rw = read.csv('./project/wineQualityReds.csv', sep = ',')
rw = rw[, c(1:2)]
# 加载你最终使用的所有组件
# 在这个代码块的分析中。
# 注意，在这个代码块中，将参数 "echo" 设为假。
# This prevents the code from displaying in the knitted HTML output.这可以避免代码混入 HTML 输出显示。
# 应当在文件中，对所有代码块设为 echo=FALSE 。
library(ggplot2)
# 加载数据
rw = read.csv('./project/wineQualityReds.csv', sep = ',')
rw = rw[, c(1:end)]
# 加载数据
rw = read.csv('./project/wineQualityReds.csv', sep = ',')
rw = rw[, 1:2]
# 加载数据
rw = read.csv('./project/wineQualityReds.csv', sep = ',')
rw = rw[, 1:3]
# 加载数据
rw = read.csv('./project/wineQualityReds.csv', sep = ',')
rw = rw[, 1:]
# 加载数据
rw = read.csv('./project/wineQualityReds.csv', sep = ',')
rw = rw[, 1:end]
# 加载数据
rw = read.csv('./project/wineQualityReds.csv', sep = ',')
rw = rw[, 1:end]
# 加载数据
rw = read.csv('./project/wineQualityReds.csv', sep = ',')
rw = rw[-1]
